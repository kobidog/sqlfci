{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 14,
      "metadata": {
        "description": "Naming prefix for each new resource created. 3-char min, 14-char max, lowercase alphanumeric"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "svcUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Account in the existing Active Directory Domain"
      }
    },
    "svcPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Service Account in the existing Active Directory Domain"
      }
    },
    "clusterIP": {
      "type": "string",
      "metadata": {
        "description": "IP Address of the cluster"
      }
    },
    "nicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VMs to be created"
      }
    },
    "vmCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 3,
      "metadata": {
        "description": "Number of VMs to be created in cluster (Min=2, Max=3)"
      }
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 128,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each VM (Min=128, Max=1023)"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftSQLServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "sql2019-ws2019"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersionStorage": "2016-01-01",
    "witnessStorageName": "sadascdhtst2dbsclw01",
    "witnessStorageType": "Standard_LRS",
    "vmNamePrefix": "[concat(parameters('namePrefix'))]",
    "vmAvailabilitySetName": "[concat(variables('vmNamePrefix'),'as01')]",
    "clusterName": "[concat(variables('vmNamePrefix'),'cl')]",
    "sqlClusterName": "[concat(variables('vmNamePrefix'),'db')]",
    "vmLoopTemplateURL": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/newVM.json',parameters('_artifactsLocationSasToken')))]",
    "sfciPrepModulesURL": "[uri(parameters('_artifactsLocation'), concat('dsc/prep-sfci.ps1.zip',parameters('_artifactsLocationSasToken')))]",
    "sfciPrepFunction": "PrepSFCI.ps1\\PrepSFCI",
    "sfciConfigModulesURL": "[uri(parameters('_artifactsLocation'), concat('dsc/config-sfci.ps1.zip',parameters('_artifactsLocationSasToken')))]",
    "sfciConfigFunction": "ConfigSFCI.ps1\\ConfigSFCI",
    "ilbName": "lb-das-cdh-tst2-dbs-01",
    "ilbID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbName'))]",
    "ilbFE": "[concat(variables('ilbName'),'-frontend')]",
    "ilbBE": "[concat(variables('ilbName'),'-backend')]",
    "ilbFEConfigID1": "[concat(variables('ilbID'),'/frontendIPConfigurations/',variables('ilbFE'))]",
    "ilbBEAddressPoolID": "[concat(variables('ilbID'),'/backendAddressPools/',variables('ilbBE'))]",
    "ilbProbe1": "[concat(variables('ilbName'),'-health-probe')]",
    "ilbProbeID1": "[concat(variables('ilbID'),'/probes/',variables('ilbProbe1'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('vmAvailabilitySetName')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      },
      "comments": "This is the availability set for the cluster nodes.  It's configured as aligned to support managed disks"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('witnessStorageName')]",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('witnessStorageType')]"
      },
      "kind": "Storage",
      "comments": "The storage account used for the SQL Cloud Witness"
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('ilbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('ilbFE')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('clusterIP')]",
              "subnet": {
                "id": "[parameters('nicSubnetUri')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('ilbBE')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "SQL-1433",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ilbFEConfigID1')]"
              },
              "backendAddressPool": {
                "id": "[variables('ilbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('ilbProbeID1')]"
              },
              "protocol": "Tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }
          },
          {
            "name": "SQL-445",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ilbFEConfigID1')]"
              },
              "backendAddressPool": {
                "id": "[variables('ilbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('ilbProbeID1')]"
              },
              "protocol": "Tcp",
              "frontendPort": 445,
              "backendPort": 445,
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('ilbProbe1')]",
            "properties": {
              "protocol": "Tcp",
              "port": 37000,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "comments": "The load balancer to enable communication with the SQL cluster resource"
    },
    {
      "name": "[concat(variables('vmNamePrefix'), copyindex(1), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-10-01",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[variables('ilbID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('nicSubnetUri')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ilbBEAddressPoolID')]"
                }
              ]
            }
          }
        ]
      },
      "comments": "The NICs for the SQL cluster nodes"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmNamePrefix'),copyindex(1),'-newVM')]",
      "dependsOn": [
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmLoopTemplateURL')]"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(variables('vmNamePrefix'), copyindex(1))]"
          },
          "vmAvailabilitySetName": {
            "value": "[variables('vmAvailabilitySetName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          }
        }
      },
      "comments": "This loop deploys the cluster nodes via a nested template"
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),copyindex(2),'/sfciPrep')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "copy": {
        "name": "virtualMachineExtensionLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('sfciPrepModulesURL')]",
          "configurationFunction": "[variables('sfciPrepFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "svcCreds": {
              "userName": "[parameters('svcUserName')]",
              "password": "PrivateSettingsRef:svcPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "svcPassword": "[parameters('svcPassword')]"
          }
        }
      },
      "comments": "This VM DSC extension prepares the second cluster node"
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),'1/sfciConfig')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "virtualMachineLoop",
        "virtualMachineExtensionLoop",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('sfciConfigModulesURL')]",
          "configurationFunction": "[variables('sfciConfigFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "clusterName": "[variables('clusterName')]",
            "sqlClusterName": "[variables('sqlClusterName')]",
            "clusterIP": "[parameters('clusterIP')]",
            "vmNamePrefix": "[variables('vmNamePrefix')]",
            "vmCount": "[parameters('vmCount')]",
            "vmDiskSize": "[parameters('vmDiskSize')]",
            "witnessStorageName": "[variables('witnessStorageName')]",
            "witnessStorageKey": {
              "userName": "PLACEHOLDER-DO-NOT-USE",
              "password": "PrivateSettingsRef:witnessStorageKey"
            },
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "svcCreds": {
              "userName": "[parameters('svcUserName')]",
              "password": "PrivateSettingsRef:svcPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "svcPassword": "[parameters('svcPassword')]",
            "witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')),variables('apiVersionStorage')).keys[0].value]"
          }
        }
      },
      "comments": "This VM DSC extension prepares the first cluster node and creates the cluster itself"
    }
  ]
}